// <auto-generated />
using System;
using MauiExample.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MauiExample.Migrations
{
    [DbContext(typeof(MauiExampleContext))]
    [Migration("20240206155615_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("MauiExample.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MauiExample.Models.WorkLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Accuracy")
                        .HasColumnType("REAL");

                    b.Property<double?>("Altitude")
                        .HasColumnType("REAL");

                    b.Property<int>("AltitudeReferenceSystem")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Course")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsFromMockProvider")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<bool>("ReducedAccuracy")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Speed")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double?>("VerticalAccuracy")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WorkLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
